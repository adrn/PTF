"""
cython -a aov.pyx
deimos:
    gcc -shared -pthread -fPIC -fwrapv -O2 -Wall -fno-strict-aliasing -I/usr/include/python2.7 -L/usr/include/python2.7 -o aov.so aov.c
laptop:
    gcc -shared -pthread -fPIC -fwrapv -O2 -Wall -fno-strict-aliasing \
    -I /usr/include/python2.7 \
    -L /usr/lib/python2.7 \
    -l python \
    -I/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/numpy/core/include \
    -o aov.so aov.c
python test_aov.py

"""

import numpy as np
import aov
import matplotlib.pyplot as plt

t = np.array([397.23, 397.243, 397.25, 397.257, 397.284, 397.298, 397.305, 397.326, 407.208, 407.21, 407.221, 407.223, 407.233, 407.271, 407.273, 407.304, 407.306, 407.316, 407.317, 407.327, 407.329, 407.339, 407.34, 407.35, 407.352, 407.362, 407.364, 407.374, 407.376, 407.386, 407.388, 407.398, 407.399, 407.41, 407.411, 407.422, 407.423, 407.434, 407.435, 407.446, 407.447, 407.458, 407.46, 407.496, 408.127, 408.129, 408.276, 408.278, 408.288, 408.29, 408.3, 408.302, 408.312, 408.314, 408.324, 408.326, 408.336, 408.338, 408.348, 408.35, 408.36, 408.362, 408.372, 408.374, 408.385, 408.387, 408.397, 408.399, 408.409, 408.411, 408.422, 408.424, 408.434, 408.436, 408.447, 408.449, 408.459, 408.461, 408.472, 408.474, 408.484, 408.486, 408.497, 408.499, 409.126, 409.138, 409.139, 409.148, 409.15, 409.16, 409.162, 409.172, 409.174, 409.184, 409.186, 409.198, 409.2, 409.211, 409.212, 409.223, 409.225, 409.237, 409.248, 409.249, 409.262, 409.272, 409.274, 409.285, 409.287, 409.297, 409.299, 409.31, 409.312, 409.322, 409.324, 409.335, 409.337, 409.348, 409.349, 409.36, 409.362, 409.373, 409.375, 409.386, 409.387, 409.418, 409.419, 409.429, 409.431, 409.441, 409.443, 409.453, 409.454, 409.464, 409.466, 409.476, 409.478, 409.488, 409.489, 410.121, 410.122, 410.132, 410.134, 410.144, 410.146, 410.155, 410.158, 410.167, 410.17, 410.179, 410.182, 410.192, 410.196, 410.204, 410.208, 410.22, 410.228, 410.232, 410.241, 410.244, 410.256, 410.265, 410.268, 410.277, 410.281, 410.289, 410.293, 410.302, 410.305, 410.314, 410.317, 410.326, 410.33, 410.339, 410.342, 410.351, 410.355, 410.364, 410.367, 410.376, 410.38, 410.389, 410.392, 410.401, 410.405, 410.414, 410.418, 410.427, 410.462, 410.465, 410.473, 410.476, 410.485, 410.488, 412.221, 412.223, 414.121, 414.122, 414.264, 414.265, 418.123, 418.125, 419.136, 419.138, 435.134, 435.135, 435.178, 435.18, 436.218, 436.263, 438.145, 438.147, 438.19, 438.213, 439.24, 439.241, 439.296, 439.297, 440.335, 440.378, 442.128, 442.363, 442.364, 444.375, 451.138, 451.139, 451.182, 451.183, 452.223, 452.265, 452.266, 454.135, 454.136, 454.179, 454.18, 457.158, 457.159, 457.202, 457.203, 458.265, 458.266, 458.309, 458.31, 461.142, 461.143, 461.184, 461.241, 462.228, 462.242, 462.272, 462.316, 464.14, 464.182, 464.183, 465.23, 465.231, 465.274, 465.275, 470.159, 470.303, 470.304, 470.312, 470.313, 470.321, 470.323, 471.179, 471.184, 471.188, 471.193, 471.198, 471.202, 471.207, 471.212, 471.216, 471.221, 471.226, 471.231, 471.235, 471.24, 471.245, 471.249, 471.254, 471.259, 471.264, 471.268, 471.273, 471.278, 471.283, 471.288, 471.293, 471.297, 471.302, 471.307, 471.312, 471.317, 471.321, 471.327, 479.15, 479.151, 479.193, 479.194, 480.195, 480.196, 480.239, 480.243, 482.149, 482.151, 482.193, 482.194, 485.159, 485.16, 486.146, 486.147, 486.19, 486.194, 487.204, 487.248, 488.156, 488.2, 489.155, 489.198, 490.155, 490.157, 490.199, 490.243, 491.158, 491.205, 492.156, 492.158, 492.199, 497.16, 497.162, 497.204, 497.208, 498.161, 498.162, 498.204, 498.206, 499.167, 499.168, 499.213, 499.236, 500.167, 500.21, 501.167, 501.168, 501.21, 501.212], dtype=np.float64)
mag = np.array([14.9055, 14.8921, 14.8641, 14.905, 14.8825, 14.8884, 14.8832, 14.8786, 14.9728, 14.9327, 14.9257, 14.9281, 14.9242, 14.8642, 14.9085, 14.8921, 14.9063, 14.8979, 14.895, 14.8815, 14.8721, 14.8746, 14.8908, 14.8852, 14.8709, 14.8736, 14.895, 14.8808, 14.8474, 14.9005, 14.859, 14.8732, 14.8849, 14.8927, 14.9329, 14.8862, 14.8823, 14.8909, 14.8764, 14.8998, 14.9074, 14.8749, 14.8943, 14.8637, 14.8854, 14.8743, 14.8792, 14.87, 14.8759, 14.866, 14.8789, 14.8593, 14.8693, 14.86, 14.8735, 14.8516, 14.8745, 14.854, 14.8794, 14.8542, 14.8621, 14.8572, 14.8784, 14.8582, 14.8791, 14.8672, 14.8764, 14.8744, 14.8808, 14.8793, 14.8871, 14.8743, 14.8969, 14.8959, 14.8877, 14.8852, 14.9052, 14.8927, 14.91, 14.9032, 14.9212, 14.9066, 14.9596, 14.9157, 14.8974, 14.906, 14.9042, 14.9088, 14.897, 14.9273, 14.9233, 14.9352, 14.938, 14.9663, 14.9585, 14.9871, 14.9729, 14.9825, 14.9593, 14.9539, 14.9377, 14.9117, 14.9243, 14.9025, 14.8903, 14.911, 14.8922, 14.9018, 14.8852, 14.9013, 14.8821, 14.8844, 14.8767, 14.8804, 14.8755, 14.8721, 14.8764, 14.8737, 14.8676, 14.8764, 14.8626, 14.8759, 14.8691, 14.8785, 14.8607, 14.888, 14.8681, 14.8866, 14.8566, 14.8786, 14.8647, 14.8897, 14.8788, 14.8931, 14.8822, 14.9028, 14.8808, 14.8948, 14.8939, 14.8735, 14.8706, 14.8858, 14.8698, 14.8963, 14.8691, 14.8932, 14.8632, 14.9009, 14.8836, 14.9084, 14.8833, 14.9054, 14.8859, 14.9109, 14.8836, 14.8915, 14.898, 14.8903, 14.8872, 14.8806, 14.8721, 14.8747, 14.8716, 14.8852, 14.8741, 14.8815, 14.8682, 14.8857, 14.8693, 14.8767, 14.862, 14.8399, 14.8535, 14.8731, 14.8447, 14.8747, 14.85, 14.8697, 14.8343, 14.8599, 14.8517, 14.8826, 14.8591, 14.8724, 14.8604, 14.8758, 14.8665, 14.8799, 14.898, 14.8684, 14.9158, 14.9004, 14.9105, 14.9059, 14.906, 14.9137, 14.8672, 14.8677, 14.9055, 14.8964, 14.8801, 14.8563, 14.8948, 14.8837, 14.8836, 14.8617, 14.8786, 14.8585, 14.8564, 14.86, 14.9133, 14.9016, 14.8951, 14.8708, 14.8777, 14.8526, 14.8782, 14.8689, 14.8771, 14.8764, 14.9754, 14.8759, 14.878, 14.861, 14.8761, 14.8999, 14.8813, 14.9161, 14.9574, 14.898, 14.8953, 14.8838, 14.8905, 14.9192, 14.9163, 14.8566, 14.8915, 14.868, 14.8913, 14.972, 14.9451, 14.9021, 14.8971, 14.8602, 14.8807, 14.8642, 14.8987, 14.8943, 14.938, 14.9698, 14.9298, 14.8593, 14.8975, 14.8716, 14.8716, 14.8781, 14.8874, 14.8803, 14.8861, 14.9299, 14.908, 14.9459, 14.9308, 14.9696, 14.9328, 14.8491, 14.8687, 14.8497, 14.8749, 14.8577, 14.87, 14.8609, 14.8708, 14.8541, 14.8643, 14.8559, 14.8783, 14.8584, 14.88, 14.8543, 14.8698, 14.8483, 14.8791, 14.8645, 14.883, 14.8728, 14.8667, 14.8776, 14.8805, 14.8797, 14.8857, 14.8673, 14.8926, 14.9057, 14.8902, 14.8738, 14.8884, 14.8907, 14.9, 14.8694, 14.9091, 14.8588, 14.8873, 14.8746, 14.8669, 14.8534, 14.8797, 14.8493, 14.873, 14.9344, 14.9072, 14.8887, 14.88, 14.8836, 14.8395, 14.8958, 14.8658, 14.8884, 14.8906, 14.9527, 14.8924, 14.8692, 14.9051, 14.8595, 14.8747, 14.9454, 14.8951, 14.8669, 14.89, 14.8181, 14.9232, 14.9086, 14.9642, 14.9688, 14.8647, 14.8731, 14.8994, 14.8827, 14.9102, 14.891, 14.9651, 14.9714, 14.8855, 14.8931, 14.9081, 14.8853, 14.9293, 14.9138], dtype=np.float64)
sig = np.array([0.1]*len(t))

Nbin = 20
minP = 0.1
maxP = 10.
subsample = 0.1
finetune = 0.01
Npeaks = 5
operiodogram = 1

T = t[-1] - t[0]
N = 5

Nperiod = 0
freq = 1. / minP
minfreq = 1. / maxP
freqstep = subsample / T

while freq >= minfreq:
    freq -= freqstep
    Nperiod += 1

i = 0
periods = np.zeros(Nperiod, dtype=float)

freq = 1. / minP
while freq >= minfreq:
    periods[i] = 1./freq
    freq -= freqstep
    i += 1

hist_size = 20

# Test the periodogram
periodogram = aov.aov_periodogram_asczerny(t, mag, Nperiod, periods, hist_size)

# Test the peak finder
findpeaks = aov.findPeaks_aov(t, mag, sig, 5, 0.1, 10., 0.1, 0.01, hist_size)

#plt.plot(findpeaks["period"], -findpeaks["periodogram"])
for ii in range(len(findpeaks["peak_period"])):
    print findpeaks["peak_period"][ii]
    print findpeaks["peak_power"][ii]
    print findpeaks["peak_SNR"][ii]
    print "--"*5
    plt.axvline(findpeaks["peak_period"][ii], color='r', ls="--")
    plt.text(findpeaks["peak_period"][ii], 40-2.*findpeaks["peak_period"][ii], "SNR: {}".format(findpeaks["peak_SNR"][ii]))
plt.show()
